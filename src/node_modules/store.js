import { writable, derived  } from 'svelte/store'

/********************************
 * ROOT AUTH CHANNELS
 *******************************/
// eg. [{ channel_uuid: <channel> }]
export const channels = writable({})

export const channelsList = derived(
  channels,
  $channels => Object.keys($channels).map( a => $channels[a])
)

// eg. channelUuid.set(channel_uuid)
export const channelUuid = writable(null)
export const channelSelected = derived(
  [channels, channelUuid], ([$channels, $channelUuid]) => {
    if ($channelUuid && $channels && $channels[$channelUuid]) {
      return $channels[$channelUuid]
    }
    return {}
  }
)


/********************************
 * ROOT USER NOTIFICATIONS
 *******************************/
// eg. [{ notification_uuid: <notification> }]
export const notifications = writable({})

export const notificationsList = derived(
  notifications,
  $notifications => Object.keys($notifications).map( a => $notifications[a])
)

// eg. notificationUuid.set(notification_uuid)
export const notificationUuid = writable(null)
export const notificationSelected = derived(
  [notifications, notificationUuid], ([$notifications, $notificationUuid]) => {
    if ($notificationUuid && $notifications && $notifications[$notificationUuid]) {
      return $notifications[$notificationUuid]
    }
    return {}
  }
)
