let base = process.env.SITE_URL || `http://localhost:${process.env.PORT || 3000}`

export function post(endpoint, data, headers = {}, token, session) {

  const fetch = process.browser ? window.fetch : require('node-fetch').default


  if (token) {
    headers['Authorization'] = `JWT ${token}`
  }

  if (session) {
    headers['Session'] = `${session}`
  }

  headers = {
    'Content-Type': 'application/json',
    ...headers
  }

  return fetch(`${base}/${endpoint}`, {
    method: 'POST',
    credentials: 'include',
    body: JSON.stringify(data),
    headers: headers
  })
    .then(r => r.json())
}

export function put(endpoint, data, headers = {}, token, session) {

  const fetch = process.browser ? window.fetch : require('node-fetch').default


  if (token) {
    headers['Authorization'] = `JWT ${token}`
  }

  if (session) {
    headers['Session'] = `${session}`
  }

  headers = {
    'Content-Type': 'application/json',
    ...headers
  }

  return fetch(`${base}/${endpoint}`, {
    method: 'PUT',
    credentials: 'include',
    body: JSON.stringify(data),
    headers: headers
  })
    .then(r => r.json())
}

export function get(endpoint, headers = {}, token, session) {

  const fetch = process.browser ? window.fetch : require('node-fetch').default

  if (token) {
    headers['Authorization'] = `JWT ${token}`
  }

  if (session) {
    headers['Session'] = `${session}`
  }

  headers = {
    'Content-Type': 'application/json',
    ...headers
  }

  return fetch(`${base}/${endpoint}`, {
    method: 'GET',
    credentials: 'include',
    headers: headers
  })
    .then(r => r.json())
}
