let base = process.env.API_URL || 'http://localhost:3001/api/v1'

function send({method, path, data, token, session, local}) {

  const fetch = process.browser ? window.fetch : require('node-fetch').default

  const opts = {method, headers: {}}

  if (data) {
    opts.headers['Content-Type'] = 'application/json'
    opts.body = JSON.stringify(data)
  }

  if (token) {
    opts.headers['Authorization'] = `JWT ${token}`
  }

  if (session) {
    opts.headers['Session'] = `${session}`
  }

  return fetch(`${base}/${path}`, opts)
    .then(r => r.text())
    .then(json => {
      try {
        return JSON.parse(json)
      } catch (err) {
        return json
      }
    })
    .catch((error) => {
      if (error instanceof Error) {
        return { error }
      }

      return error.json()
        .then((responseJson) => {
          return {
            error: new Error(
              `HTTP ${error.status} ${error.statusText}: ${responseJson.body}`
            )
          }
      })
    })
}

export function get(path, token, session, local) {
  return send({method: 'GET', path, token, session, local})
}

export function del(path, data, token, session, local) {
  return send({method: 'DELETE', path, token, session, local})
}

export function post(path, data, token, session, local) {
  return send({method: 'POST', path, data, token, session, local})
}

export function put(path, data, token, session, local) {
  return send({method: 'PUT', path, data, token, session, local})
}
